NODE_ROOT 0..150 {
  NODE_WITH 0..150 {
    TOKEN_WITH("with") 0..4
    TOKEN_WHITESPACE(" ") 4..5
    NODE_APPLY 5..28 {
      NODE_IDENT 5..11 {
        TOKEN_IDENT("import") 5..11
      }
      TOKEN_WHITESPACE(" ") 11..12
      NODE_LITERAL 12..28 {
        TOKEN_PATH("./simple-set.nix") 12..28
      }
    }
    TOKEN_SEMICOLON(";") 28..29
    TOKEN_WHITESPACE("\n\n") 29..31
    NODE_LET_IN 31..150 {
      TOKEN_LET("let") 31..34
      TOKEN_WHITESPACE("\n  ") 34..37
      NODE_ATTRPATH_VALUE 37..47 {
        NODE_ATTRPATH 37..38 {
          NODE_IDENT 37..38 {
            TOKEN_IDENT("a") 37..38
          }
        }
        TOKEN_WHITESPACE(" ") 38..39
        TOKEN_ASSIGN("=") 39..40
        TOKEN_WHITESPACE(" ") 40..41
        NODE_BIN_OP 41..46 {
          NODE_LITERAL 41..42 {
            TOKEN_INTEGER("4") 41..42
          }
          TOKEN_WHITESPACE(" ") 42..43
          TOKEN_ADD("+") 43..44
          TOKEN_WHITESPACE(" ") 44..45
          NODE_LITERAL 45..46 {
            TOKEN_INTEGER("2") 45..46
          }
        }
        TOKEN_SEMICOLON(";") 46..47
      }
      TOKEN_WHITESPACE("\n") 47..48
      TOKEN_IN("in") 48..50
      TOKEN_WHITESPACE(" ") 50..51
      NODE_ATTR_SET 51..150 {
        TOKEN_CURLY_B_OPEN("{") 51..52
        TOKEN_WHITESPACE("\n  ") 52..55
        NODE_ATTRPATH_VALUE 55..65 {
          NODE_ATTRPATH 55..56 {
            NODE_IDENT 55..56 {
              TOKEN_IDENT("b") 55..56
            }
          }
          TOKEN_WHITESPACE(" ") 56..57
          TOKEN_ASSIGN("=") 57..58
          TOKEN_WHITESPACE(" ") 58..59
          NODE_BIN_OP 59..64 {
            NODE_IDENT 59..60 {
              TOKEN_IDENT("a") 59..60
            }
            TOKEN_WHITESPACE(" ") 60..61
            TOKEN_ADD("+") 61..62
            TOKEN_WHITESPACE(" ") 62..63
            NODE_LITERAL 63..64 {
              TOKEN_INTEGER("2") 63..64
            }
          }
          TOKEN_SEMICOLON(";") 64..65
        }
        TOKEN_WHITESPACE("\n\n  ") 65..69
        NODE_ATTRPATH_VALUE 69..148 {
          NODE_ATTRPATH 69..75 {
            NODE_IDENT 69..75 {
              TOKEN_IDENT("legacy") 69..75
            }
          }
          TOKEN_WHITESPACE(" ") 75..76
          TOKEN_ASSIGN("=") 76..77
          TOKEN_WHITESPACE(" ") 77..78
          NODE_LEGACY_LET 78..147 {
            TOKEN_LET("let") 78..81
            TOKEN_WHITESPACE(" ") 81..82
            TOKEN_CURLY_B_OPEN("{") 82..83
            TOKEN_WHITESPACE("\n    ") 83..88
            NODE_ATTRPATH_VALUE 88..113 {
              NODE_ATTRPATH 88..105 {
                NODE_IDENT 88..105 {
                  TOKEN_IDENT("this_syntax_sucks") 88..105
                }
              }
              TOKEN_WHITESPACE(" ") 105..106
              TOKEN_ASSIGN("=") 106..107
              TOKEN_WHITESPACE(" ") 107..108
              NODE_IDENT 108..112 {
                TOKEN_IDENT("true") 108..112
              }
              TOKEN_SEMICOLON(";") 112..113
            }
            TOKEN_WHITESPACE("\n    ") 113..118
            NODE_ATTRPATH_VALUE 118..143 {
              NODE_ATTRPATH 118..122 {
                NODE_IDENT 118..122 {
                  TOKEN_IDENT("body") 118..122
                }
              }
              TOKEN_WHITESPACE(" ") 122..123
              TOKEN_ASSIGN("=") 123..124
              TOKEN_WHITESPACE(" ") 124..125
              NODE_IDENT 125..142 {
                TOKEN_IDENT("this_syntax_sucks") 125..142
              }
              TOKEN_SEMICOLON(";") 142..143
            }
            TOKEN_WHITESPACE("\n  ") 143..146
            TOKEN_CURLY_B_CLOSE("}") 146..147
          }
          TOKEN_SEMICOLON(";") 147..148
        }
        TOKEN_WHITESPACE("\n") 148..149
        TOKEN_CURLY_B_CLOSE("}") 149..150
      }
    }
  }
}
