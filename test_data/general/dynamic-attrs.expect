NODE_ROOT 0..216 {
  NODE_LET_IN 0..216 {
    TOKEN_LET("let") 0..3
    TOKEN_WHITESPACE("\n  ") 3..6
    NODE_ATTRPATH_VALUE 6..45 {
      NODE_ATTRPATH 6..12 {
        NODE_IDENT 6..12 {
          TOKEN_IDENT("define") 6..12
        }
      }
      TOKEN_WHITESPACE(" ") 12..13
      TOKEN_ASSIGN("=") 13..14
      TOKEN_WHITESPACE(" ") 14..15
      NODE_LAMBDA 15..44 {
        NODE_IDENT 15..19 {
          TOKEN_IDENT("name") 15..19
        }
        TOKEN_COLON(":") 19..20
        TOKEN_WHITESPACE(" ") 20..21
        NODE_LAMBDA 21..44 {
          NODE_IDENT 21..24 {
            TOKEN_IDENT("val") 21..24
          }
          TOKEN_COLON(":") 24..25
          TOKEN_WHITESPACE(" ") 25..26
          NODE_ATTR_SET 26..44 {
            TOKEN_CURLY_B_OPEN("{") 26..27
            TOKEN_WHITESPACE(" ") 27..28
            NODE_ATTRPATH_VALUE 28..42 {
              NODE_ATTRPATH 28..35 {
                NODE_DYNAMIC 28..35 {
                  TOKEN_DYNAMIC_START("${") 28..30
                  NODE_IDENT 30..34 {
                    TOKEN_IDENT("name") 30..34
                  }
                  TOKEN_DYNAMIC_END("}") 34..35
                }
              }
              TOKEN_WHITESPACE(" ") 35..36
              TOKEN_ASSIGN("=") 36..37
              TOKEN_WHITESPACE(" ") 37..38
              NODE_IDENT 38..41 {
                TOKEN_IDENT("val") 38..41
              }
              TOKEN_SEMICOLON(";") 41..42
            }
            TOKEN_WHITESPACE(" ") 42..43
            TOKEN_CURLY_B_CLOSE("}") 43..44
          }
        }
      }
      TOKEN_SEMICOLON(";") 44..45
    }
    TOKEN_WHITESPACE("\n  ") 45..48
    NODE_ATTRPATH_VALUE 48..62 {
      NODE_ATTRPATH 48..51 {
        NODE_IDENT 48..51 {
          TOKEN_IDENT("key") 48..51
        }
      }
      TOKEN_WHITESPACE(" ") 51..52
      TOKEN_ASSIGN("=") 52..53
      TOKEN_WHITESPACE(" ") 53..54
      NODE_STRING 54..61 {
        TOKEN_STRING_START("\"") 54..55
        TOKEN_STRING_CONTENT("hello") 55..60
        TOKEN_STRING_END("\"") 60..61
      }
      TOKEN_SEMICOLON(";") 61..62
    }
    TOKEN_WHITESPACE("\n  ") 62..65
    NODE_ATTRPATH_VALUE 65..89 {
      NODE_ATTRPATH 65..68 {
        NODE_IDENT 65..68 {
          TOKEN_IDENT("set") 65..68
        }
      }
      TOKEN_WHITESPACE(" ") 68..69
      TOKEN_ASSIGN("=") 69..70
      TOKEN_WHITESPACE(" ") 70..71
      NODE_ATTR_SET 71..88 {
        TOKEN_CURLY_B_OPEN("{") 71..72
        TOKEN_WHITESPACE(" ") 72..73
        NODE_ATTRPATH_VALUE 73..79 {
          NODE_ATTRPATH 73..74 {
            NODE_IDENT 73..74 {
              TOKEN_IDENT("a") 73..74
            }
          }
          TOKEN_WHITESPACE(" ") 74..75
          TOKEN_ASSIGN("=") 75..76
          TOKEN_WHITESPACE(" ") 76..77
          NODE_LITERAL 77..78 {
            TOKEN_INTEGER("1") 77..78
          }
          TOKEN_SEMICOLON(";") 78..79
        }
        TOKEN_WHITESPACE(" ") 79..80
        NODE_ATTRPATH_VALUE 80..86 {
          NODE_ATTRPATH 80..81 {
            NODE_IDENT 80..81 {
              TOKEN_IDENT("b") 80..81
            }
          }
          TOKEN_WHITESPACE(" ") 81..82
          TOKEN_ASSIGN("=") 82..83
          TOKEN_WHITESPACE(" ") 83..84
          NODE_LITERAL 84..85 {
            TOKEN_INTEGER("2") 84..85
          }
          TOKEN_SEMICOLON(";") 85..86
        }
        TOKEN_WHITESPACE(" ") 86..87
        TOKEN_CURLY_B_CLOSE("}") 87..88
      }
      TOKEN_SEMICOLON(";") 88..89
    }
    TOKEN_WHITESPACE("\n  ") 89..92
    NODE_ATTRPATH_VALUE 92..110 {
      NODE_ATTRPATH 92..103 {
        NODE_IDENT 92..103 {
          TOKEN_IDENT("dynamic_key") 92..103
        }
      }
      TOKEN_WHITESPACE(" ") 103..104
      TOKEN_ASSIGN("=") 104..105
      TOKEN_WHITESPACE(" ") 105..106
      NODE_STRING 106..109 {
        TOKEN_STRING_START("\"") 106..107
        TOKEN_STRING_CONTENT("c") 107..108
        TOKEN_STRING_END("\"") 108..109
      }
      TOKEN_SEMICOLON(";") 109..110
    }
    TOKEN_WHITESPACE("\n") 110..111
    TOKEN_IN("in") 111..113
    TOKEN_WHITESPACE("\n  ") 113..116
    NODE_BIN_OP 116..216 {
      NODE_APPLY 116..136 {
        NODE_APPLY 116..128 {
          NODE_IDENT 116..122 {
            TOKEN_IDENT("define") 116..122
          }
          TOKEN_WHITESPACE(" ") 122..123
          NODE_STRING 123..128 {
            TOKEN_STRING_START("\"") 123..124
            TOKEN_STRING_CONTENT("key") 124..127
            TOKEN_STRING_END("\"") 127..128
          }
        }
        TOKEN_WHITESPACE(" ") 128..129
        NODE_STRING 129..136 {
          TOKEN_STRING_START("\"") 129..130
          TOKEN_STRING_CONTENT("value") 130..135
          TOKEN_STRING_END("\"") 135..136
        }
      }
      TOKEN_WHITESPACE(" ") 136..137
      TOKEN_UPDATE("//") 137..139
      TOKEN_WHITESPACE(" ") 139..140
      NODE_ATTR_SET 140..216 {
        TOKEN_CURLY_B_OPEN("{") 140..141
        TOKEN_WHITESPACE("\n    ") 141..146
        NODE_ATTRPATH_VALUE 146..168 {
          NODE_ATTRPATH 146..160 {
            NODE_STRING 146..154 {
              TOKEN_STRING_START("\"") 146..147
              NODE_STRING_INTERPOL 147..153 {
                TOKEN_INTERPOL_START("${") 147..149
                NODE_IDENT 149..152 {
                  TOKEN_IDENT("key") 149..152
                }
                TOKEN_INTERPOL_END("}") 152..153
              }
              TOKEN_STRING_END("\"") 153..154
            }
            TOKEN_DOT(".") 154..155
            NODE_IDENT 155..160 {
              TOKEN_IDENT("world") 155..160
            }
          }
          TOKEN_WHITESPACE(" ") 160..161
          TOKEN_ASSIGN("=") 161..162
          TOKEN_WHITESPACE(" ") 162..163
          NODE_STRING 163..167 {
            TOKEN_STRING_START("\"") 163..164
            TOKEN_STRING_CONTENT(":D") 164..166
            TOKEN_STRING_END("\"") 166..167
          }
          TOKEN_SEMICOLON(";") 167..168
        }
        TOKEN_WHITESPACE("\n    ") 168..173
        NODE_ATTRPATH_VALUE 173..212 {
          NODE_ATTRPATH 173..188 {
            NODE_IDENT 173..188 {
              TOKEN_IDENT("dynamic_key_set") 173..188
            }
          }
          TOKEN_WHITESPACE(" ") 188..189
          TOKEN_ASSIGN("=") 189..190
          TOKEN_WHITESPACE(" ") 190..191
          NODE_HAS_ATTR 191..211 {
            NODE_IDENT 191..194 {
              TOKEN_IDENT("set") 191..194
            }
            TOKEN_WHITESPACE(" ") 194..195
            TOKEN_QUESTION("?") 195..196
            TOKEN_WHITESPACE(" ") 196..197
            NODE_ATTRPATH 197..211 {
              NODE_DYNAMIC 197..211 {
                TOKEN_DYNAMIC_START("${") 197..199
                NODE_IDENT 199..210 {
                  TOKEN_IDENT("dynamic_key") 199..210
                }
                TOKEN_DYNAMIC_END("}") 210..211
              }
            }
          }
          TOKEN_SEMICOLON(";") 211..212
        }
        TOKEN_WHITESPACE("\n  ") 212..215
        TOKEN_CURLY_B_CLOSE("}") 215..216
      }
    }
  }
}
